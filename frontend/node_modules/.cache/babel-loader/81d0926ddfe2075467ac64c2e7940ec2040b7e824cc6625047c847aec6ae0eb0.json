{"ast":null,"code":"// ---------- Адрес сервера ----------\nconst URL = \"http://localhost:3001\";\n\n/* \r\nФункция аналогична fetchAllData для \"менеджеров\", \r\nно теперь для получения тарифов (tariffs) и связанных услуг (services).\r\nНа сервере должен быть маршрут GET /tariffs, \r\nвозвращающий массив тарифов со вложенным списком услуг.\r\n*/\n\nexport const fetchAllTariffs = async setData => {\n  try {\n    const response = await fetch(`${URL}/tariffs`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при получении тарифов\");\n    }\n    let data = await response.json();\n\n    // Если нужно что-то сортировать в услугах — например, по service_code.\n    data.forEach(tariff => {\n      if (tariff.services && tariff.services.length > 0) {\n        tariff.services.sort((a, b) => a.service_code.localeCompare(b.service_code));\n      }\n    });\n    setData(data);\n  } catch (error) {\n    console.error(\"Ошибка при загрузке тарифов:\", error.message);\n    alert(\"Ошибка при загрузке тарифов: \" + error.message);\n  }\n};\n\n// ---------- Запрос на добавление тарифа ----------\nexport const addTariff = async data => {\n  /*\r\n    data = {\r\n      tariff_code: \"TAR-XXX\",\r\n      tariff_name: \"Название тарифа\"\r\n    }\r\n   */\n  try {\n    const response = await fetch(`${URL}/tariffs/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при добавлении тарифа\");\n    }\n    alert(\"Тариф успешно добавлен!\");\n    return 200;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при добавлении тарифа: \" + error.message);\n  }\n};\n\n// ---------- Запрос на обновление данных о тарифе ----------\nexport const updateTariff = async (data, id) => {\n  /*\r\n    Обычно id — это tariff_id (числовой).\r\n    data = {\r\n      tariff_name: \"Новое название\"\r\n    }\r\n    tariff_code не редактируем.\r\n  */\n  try {\n    const response = await fetch(`${URL}/tariffs/update/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при обновлении данных тарифа\");\n    }\n    alert(\"Данные о тарифе успешно обновлены!\");\n    return 200;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при обновлении тарифа: \" + error.message);\n  }\n};\n\n// ---------- Запрос на удаление тарифа ----------\nexport const deleteTariff = async id => {\n  try {\n    const response = await fetch(`${URL}/tariffs/delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Ошибка при удалении тарифа\");\n    }\n    const result = await response.json();\n    return result; // result.message\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при удалении тарифа: \" + error.message);\n  }\n};\n\n// ---------- Запрос на получение всех типов услуг ----------\nexport const getServiceTypes = async () => {\n  // в отличие от прежнего getSkills(setData), \n  // мы можем возвращать результат напрямую, а не через setData.\n  try {\n    const response = await fetch(`${URL}/service-types`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при получении типов услуг\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Ошибка при загрузке типов услуг:\", error.message);\n    alert(\"Ошибка при загрузке типов услуг: \" + error.message);\n  }\n};\n\n// ---------- Запрос на добавление типа услуги ----------\nexport const addServiceType = async data => {\n  /*\r\n    data = {\r\n      service_type_name: \"Мобильный интернет\"\r\n    }\r\n  */\n  try {\n    const response = await fetch(`${URL}/service-types/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при добавлении типа услуги\");\n    }\n    alert(\"Тип услуги успешно добавлен!\");\n    return 200;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при добавлении типа услуги: \" + error.message);\n  }\n};\n\n// ---------- Запрос на добавление услуги в тариф ----------\nexport const addService = async data => {\n  /*\r\n    data = {\r\n      service_code: \"SRV-... \",\r\n      tariff_id: 1, \r\n      service_type_id: 2,\r\n      param_value: 100,\r\n      param_unit: \"ГБ\"\r\n    }\r\n   */\n  try {\n    const response = await fetch(`${URL}/services/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при добавлении услуги\");\n    }\n    alert(\"Услуга успешно добавлена!\");\n    return 200;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при добавлении услуги: \" + error.message);\n  }\n};\n\n// ---------- Запрос на удаление услуги ----------\nexport const deleteService = async id => {\n  try {\n    const response = await fetch(`${URL}/services/delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Ошибка при удалении услуги\");\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при удалении услуги: \" + error.message);\n  }\n};\n\n// ---------- Запрос на перенос услуги между тарифами ----------\nexport const moveService = async (id, data) => {\n  /*\r\n    id = service_id (числовой)\r\n    data = { new_tariff_id: 3 }\r\n  */\n  try {\n    const response = await fetch(`${URL}/services/move/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при переносе услуги\");\n    }\n    alert(\"Услуга успешно перенесена в другой тариф!\");\n    return 200;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при переносе услуги: \" + error.message);\n  }\n};","map":{"version":3,"names":["URL","fetchAllTariffs","setData","response","fetch","method","headers","ok","Error","data","json","forEach","tariff","services","length","sort","a","b","service_code","localeCompare","error","console","message","alert","addTariff","body","JSON","stringify","updateTariff","id","deleteTariff","errorData","result","getServiceTypes","addServiceType","addService","deleteService","moveService"],"sources":["/Users/admin/Desktop/TRVP-011 (2)/frontend/src/requests.js"],"sourcesContent":["// ---------- Адрес сервера ----------\r\nconst URL = \"http://localhost:3001\";\r\n\r\n/* \r\nФункция аналогична fetchAllData для \"менеджеров\", \r\nно теперь для получения тарифов (tariffs) и связанных услуг (services).\r\nНа сервере должен быть маршрут GET /tariffs, \r\nвозвращающий массив тарифов со вложенным списком услуг.\r\n*/\r\n\r\nexport const fetchAllTariffs = async (setData) => {\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при получении тарифов\");\r\n    }\r\n\r\n    let data = await response.json();\r\n    \r\n    // Если нужно что-то сортировать в услугах — например, по service_code.\r\n    data.forEach((tariff) => {\r\n      if (tariff.services && tariff.services.length > 0) {\r\n        tariff.services.sort((a, b) => a.service_code.localeCompare(b.service_code));\r\n      }\r\n    });\r\n\r\n    setData(data);\r\n  } catch (error) {\r\n    console.error(\"Ошибка при загрузке тарифов:\", error.message);\r\n    alert(\"Ошибка при загрузке тарифов: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление тарифа ----------\r\nexport const addTariff = async (data) => {\r\n  /*\r\n    data = {\r\n      tariff_code: \"TAR-XXX\",\r\n      tariff_name: \"Название тарифа\"\r\n    }\r\n   */\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs/add`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при добавлении тарифа\");\r\n    }\r\n\r\n    alert(\"Тариф успешно добавлен!\");\r\n    return 200;\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при добавлении тарифа: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на обновление данных о тарифе ----------\r\nexport const updateTariff = async (data, id) => {\r\n  /*\r\n    Обычно id — это tariff_id (числовой).\r\n    data = {\r\n      tariff_name: \"Новое название\"\r\n    }\r\n    tariff_code не редактируем.\r\n  */\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs/update/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при обновлении данных тарифа\");\r\n    }\r\n\r\n    alert(\"Данные о тарифе успешно обновлены!\");\r\n    return 200;\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при обновлении тарифа: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на удаление тарифа ----------\r\nexport const deleteTariff = async (id) => {\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"Ошибка при удалении тарифа\");\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result; // result.message\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при удалении тарифа: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на получение всех типов услуг ----------\r\nexport const getServiceTypes = async () => {\r\n  // в отличие от прежнего getSkills(setData), \r\n  // мы можем возвращать результат напрямую, а не через setData.\r\n  try {\r\n    const response = await fetch(`${URL}/service-types`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при получении типов услуг\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data; \r\n  } catch (error) {\r\n    console.error(\"Ошибка при загрузке типов услуг:\", error.message);\r\n    alert(\"Ошибка при загрузке типов услуг: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление типа услуги ----------\r\nexport const addServiceType = async (data) => {\r\n  /*\r\n    data = {\r\n      service_type_name: \"Мобильный интернет\"\r\n    }\r\n  */\r\n  try {\r\n    const response = await fetch(`${URL}/service-types/add`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при добавлении типа услуги\");\r\n    }\r\n\r\n    alert(\"Тип услуги успешно добавлен!\");\r\n    return 200;\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при добавлении типа услуги: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление услуги в тариф ----------\r\nexport const addService = async (data) => {\r\n  /*\r\n    data = {\r\n      service_code: \"SRV-... \",\r\n      tariff_id: 1, \r\n      service_type_id: 2,\r\n      param_value: 100,\r\n      param_unit: \"ГБ\"\r\n    }\r\n   */\r\n  try {\r\n    const response = await fetch(`${URL}/services/add`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при добавлении услуги\");\r\n    }\r\n\r\n    alert(\"Услуга успешно добавлена!\");\r\n    return 200;\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при добавлении услуги: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на удаление услуги ----------\r\nexport const deleteService = async (id) => {\r\n  try {\r\n    const response = await fetch(`${URL}/services/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"Ошибка при удалении услуги\");\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result; \r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при удалении услуги: \" + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на перенос услуги между тарифами ----------\r\nexport const moveService = async (id, data) => {\r\n  /*\r\n    id = service_id (числовой)\r\n    data = { new_tariff_id: 3 }\r\n  */\r\n  try {\r\n    const response = await fetch(`${URL}/services/move/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при переносе услуги\");\r\n    }\r\n\r\n    alert(\"Услуга успешно перенесена в другой тариф!\");\r\n    return 200;\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при переносе услуги: \" + error.message);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}