{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/TRVP-011 (2)/frontend/src/components/forms/AddSkill.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getServiceTypes, addServiceType } from '../../requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddServiceType({\n  setShown\n}) {\n  _s();\n  const [service_type_name, setName] = useState('');\n  const [typesList, setTypesList] = useState([]);\n  useEffect(() => {\n    getServiceTypes().then(data => setTypesList(data));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Проверка на дубликат по названию (примерная логика):\n    const exists = typesList.some(t => t.service_type_name.toLowerCase() === service_type_name.toLowerCase());\n    if (exists) {\n      alert('Тип услуги с таким названием уже существует.');\n      return;\n    }\n    try {\n      await addServiceType({\n        service_type_name\n      });\n      setShown(false);\n      window.location.reload();\n    } catch (error) {\n      alert('Ошибка при добавлении типа услуги');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0442\\u0438\\u043F\\u0430 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0438\\u043F\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: service_type_name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"grey-button\",\n          onClick: () => setShown(false),\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filed-button\",\n          type: \"submit\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AddServiceType, \"jhwXxWBXzcqbp4YXOFPejbC7nuk=\");\n_c = AddServiceType;\nvar _c;\n$RefreshReg$(_c, \"AddServiceType\");","map":{"version":3,"names":["React","useState","useEffect","getServiceTypes","addServiceType","jsxDEV","_jsxDEV","AddServiceType","setShown","_s","service_type_name","setName","typesList","setTypesList","then","data","handleSubmit","e","preventDefault","exists","some","t","toLowerCase","alert","window","location","reload","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/TRVP-011 (2)/frontend/src/components/forms/AddSkill.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getServiceTypes, addServiceType } from '../../requests';\r\n\r\nexport default function AddServiceType({ setShown }) {\r\n  const [service_type_name, setName] = useState('');\r\n  const [typesList, setTypesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getServiceTypes().then((data) => setTypesList(data));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Проверка на дубликат по названию (примерная логика):\r\n    const exists = typesList.some(\r\n      (t) => t.service_type_name.toLowerCase() === service_type_name.toLowerCase()\r\n    );\r\n    if (exists) {\r\n      alert('Тип услуги с таким названием уже существует.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addServiceType({ service_type_name });\r\n      setShown(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      alert('Ошибка при добавлении типа услуги');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-block\">\r\n      <h2>Добавление типа услуги</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-input-block\">\r\n          <label>Название типа:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={service_type_name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"buttons-block\">\r\n          <button className=\"grey-button\" onClick={() => setShown(false)}>\r\n            Отменить\r\n          </button>\r\n          <button className=\"filed-button\" type=\"submit\">\r\n            Добавить\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}