{"ast":null,"code":"// ---------- Адрес сервера ----------\nconst URL = \"http://localhost:3001\";\n\n// ---------- Запрос на получение всех тарифов (без коллбэка setData) ----------\nexport const fetchAllTariffs = async () => {\n  try {\n    const response = await fetch(`${URL}/tariffs`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при получении тарифов\");\n    }\n\n    // Возвращаем данные, а не вызываем setData\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Ошибка при загрузке тарифов:\", error.message);\n    alert(\"Ошибка при загрузке тарифов: \" + error.message);\n    // Бросаем ошибку, чтобы вызвать .catch() в вызывающем коде\n    throw error;\n  }\n};\n\n// ---------- Запрос на добавление тарифа ----------\nexport const addTariff = async data => {\n  try {\n    const response = await fetch(`${URL}/tariffs/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при добавлении тарифа\");\n    }\n    alert(\"Тариф успешно добавлен!\");\n    return await response.json(); // Можно вернуть что-то, если сервер шлёт { message: \"...\", tariff_id: ... }\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при добавлении тарифа: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на обновление данных о тарифе ----------\nexport const updateTariff = async (id, data) => {\n  try {\n    const response = await fetch(`${URL}/tariffs/update/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при обновлении данных тарифа\");\n    }\n    alert(\"Данные о тарифе успешно обновлены!\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при обновлении тарифа: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на удаление тарифа ----------\nexport const deleteTariff = async id => {\n  try {\n    const response = await fetch(`${URL}/tariffs/delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Ошибка при удалении тарифа\");\n    }\n    const result = await response.json();\n    // В result обычно { message: \"...\", ... } — можно вернуть\n    return result;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при удалении тарифа: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на получение всех типов услуг ----------\nexport const getServiceTypes = async () => {\n  try {\n    const response = await fetch(`${URL}/service-types`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при получении типов услуг\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Ошибка при загрузке типов услуг:\", error.message);\n    alert(\"Ошибка при загрузке типов услуг: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на добавление типа услуги ----------\nexport const addServiceType = async data => {\n  try {\n    const response = await fetch(`${URL}/service-types/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при добавлении типа услуги\");\n    }\n    alert(\"Тип услуги успешно добавлен!\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при добавлении типа услуги: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на добавление услуги в тариф ----------\nexport const addService = async data => {\n  try {\n    const response = await fetch(`${URL}/services/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при добавлении услуги\");\n    }\n    alert(\"Услуга успешно добавлена!\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при добавлении услуги: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на удаление услуги ----------\nexport const deleteService = async id => {\n  try {\n    const response = await fetch(`${URL}/services/delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Ошибка при удалении услуги\");\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при удалении услуги: \" + error.message);\n    throw error;\n  }\n};\n\n// ---------- Запрос на перенос услуги между тарифами ----------\nexport const moveService = async (id, data) => {\n  try {\n    const response = await fetch(`${URL}/services/move/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при переносе услуги\");\n    }\n    alert(\"Услуга успешно перенесена в другой тариф!\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Ошибка:\", error.message);\n    alert(\"Ошибка при переносе услуги: \" + error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["URL","fetchAllTariffs","response","fetch","method","headers","ok","Error","data","json","error","console","message","alert","addTariff","body","JSON","stringify","updateTariff","id","deleteTariff","errorData","result","getServiceTypes","addServiceType","addService","deleteService","moveService"],"sources":["C:/pashulkaaa/BMSTU/Учеба/7 семестр/ТРВП/TRVP-002_2/frontend/src/requests.js"],"sourcesContent":["// ---------- Адрес сервера ----------\r\nconst URL = \"http://localhost:3001\";\r\n\r\n// ---------- Запрос на получение всех тарифов (без коллбэка setData) ----------\r\nexport const fetchAllTariffs = async () => {\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при получении тарифов\");\r\n    }\r\n\r\n    // Возвращаем данные, а не вызываем setData\r\n    const data = await response.json();\r\n    return data; \r\n  } catch (error) {\r\n    console.error(\"Ошибка при загрузке тарифов:\", error.message);\r\n    alert(\"Ошибка при загрузке тарифов: \" + error.message);\r\n    // Бросаем ошибку, чтобы вызвать .catch() в вызывающем коде\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление тарифа ----------\r\nexport const addTariff = async (data) => {\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs/add`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при добавлении тарифа\");\r\n    }\r\n\r\n    alert(\"Тариф успешно добавлен!\");\r\n    return await response.json(); // Можно вернуть что-то, если сервер шлёт { message: \"...\", tariff_id: ... }\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при добавлении тарифа: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на обновление данных о тарифе ----------\r\nexport const updateTariff = async (id, data) => {\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs/update/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data), \r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при обновлении данных тарифа\");\r\n    }\r\n\r\n    alert(\"Данные о тарифе успешно обновлены!\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при обновлении тарифа: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на удаление тарифа ----------\r\nexport const deleteTariff = async (id) => {\r\n  try {\r\n    const response = await fetch(`${URL}/tariffs/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"Ошибка при удалении тарифа\");\r\n    }\r\n\r\n    const result = await response.json();\r\n    // В result обычно { message: \"...\", ... } — можно вернуть\r\n    return result; \r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при удалении тарифа: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на получение всех типов услуг ----------\r\nexport const getServiceTypes = async () => {\r\n  try {\r\n    const response = await fetch(`${URL}/service-types`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при получении типов услуг\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data; \r\n  } catch (error) {\r\n    console.error(\"Ошибка при загрузке типов услуг:\", error.message);\r\n    alert(\"Ошибка при загрузке типов услуг: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление типа услуги ----------\r\nexport const addServiceType = async (data) => {\r\n  try {\r\n    const response = await fetch(`${URL}/service-types/add`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при добавлении типа услуги\");\r\n    }\r\n\r\n    alert(\"Тип услуги успешно добавлен!\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при добавлении типа услуги: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление услуги в тариф ----------\r\nexport const addService = async (data) => {\r\n  try {\r\n    const response = await fetch(`${URL}/services/add`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при добавлении услуги\");\r\n    }\r\n\r\n    alert(\"Услуга успешно добавлена!\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при добавлении услуги: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на удаление услуги ----------\r\nexport const deleteService = async (id) => {\r\n  try {\r\n    const response = await fetch(`${URL}/services/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"Ошибка при удалении услуги\");\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result; \r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при удалении услуги: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ---------- Запрос на перенос услуги между тарифами ----------\r\nexport const moveService = async (id, data) => {\r\n  try {\r\n    const response = await fetch(`${URL}/services/move/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Ошибка при переносе услуги\");\r\n    }\r\n\r\n    alert(\"Услуга успешно перенесена в другой тариф!\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Ошибка:\", error.message);\r\n    alert(\"Ошибка при переносе услуги: \" + error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}